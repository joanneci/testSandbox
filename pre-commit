#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
# If there are whitespace errors, print the offending file names and fail.
exec git diff-index --check --cached $against --

# Detect too long lines in .php and .html files:
changed_source_files=`git diff-index --cached $against --numstat |
cut -f3 |
egrep '\.[php][html]$'`
 
if [[ -n "$changed_source_files" ]]; then
found_offenses=''
 
for file in $changed_source_files ; do
too_long=`git diff-index --cached -p $against -- ${file} |
egrep '^\+.{121,}' | sed -E 's/^\+//'`
if [[ -n "$too_long" ]]; then
found_offenses=YES
printf "\n$file:\n%s\n" "$too_long" >&2
fi
done
 
if [[ -n $found_offenses ]]; then
echo "\nAborting commit because you added lines longer than 116 chars." >&2
exit 1
fi
fi
